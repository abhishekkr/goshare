{"name":"GoShare","tagline":"Go Share your TimeSeries|NameSpace KeyVal (with leveldb powers) over HTTP|ZeroMQ","body":"## Go Share\r\n### is a time-machine written for state of any key-factor across a time-frame\r\n#### just supports key:val data-point reference (also name-space, and w/o timestamp as well)\r\n#### the main cog of this machine is \"[leveldb](http://code.google.com/p/leveldb/)\" and is written in \"[GoLang](http://golang.org/)\"\r\n#### this is the engine to power bigger vehicles like [MomentDB](https://github.com/abhishekkr/momentdb)\r\n\r\n```ASCII\r\n                        __\r\n   ____ _____     _____/ /_  ____ _________\r\n  / __ `/ __ \\   / ___/ __ \\/ __ `/ ___/ _ \\\r\n / /_/ / /_/ /  (__  ) / / / /_/ / /  /  __/\r\n \\__, /\\____/  /____/_/ /_/\\__,_/_/   \\___/\r\n/____/\r\n\r\n```\r\n\r\n#### What's the idea?\r\n\r\nA [TimeSeries DataStore](http://en.wikipedia.org/wiki/Time_series_database) i.e. a data store built especially for the need of key-value transactions within a time-frame. Particular use-case of tracking change of state for a particular factor over a period of time.\r\n\r\n#### Why build one?\r\n\r\nThe requirement for FOSS datastore was to be\r\n* built for timeseries _(not a common store with forced schema for it)_\r\n* standalone _(simple to install/manage)_\r\n* fast _(for data transaction)_\r\n\r\nSo it's easy to set-up and quick to dump data over. Most of the alternatives out there are either based off other components to be managed (also increasing up the hops, resource requirements, and more), some are commercial and some both.\r\n\r\nOther popular datastores built specifically for time-series data are:\r\n\r\n* [InfluxDB](http://influxdb.org/), looks good ...gotta checkout\r\n* [Cube](http://square.github.io/cube/), uses MongoDB as backend ...uhhoh\r\n* [GoCircuit Vena](http://www.gocircuit.org/vena.html), think it requires ZooKeeper ...will have to see\r\n* [OpenTSDB](http://opentsdb.net/), defers to Hadoop's HBASE ...handle that\r\n* [KairosDB](https://code.google.com/p/kairosdb/), like OpenTSDB with Cassandra as base ...again\r\n* [Tempo-DB](https://tempo-db.com/) looks good, but *Commercial*\r\n* [IBM Informix](http://www-01.ibm.com/software/data/informix/) & [Microsoft StreamInsight](http://msdn.microsoft.com/en-us/library/ee362541.aspx) been mentioned at places mainly for CEP, *Commerical* ...whatever MS|IBM\r\n\r\n#### Doc|Guides|Articles\r\n\r\n* [@ReadMe](https://github.com/abhishekkr/goshare/blob/master/README.md)\r\n\r\n#### Go Share any data among the nodes. Over HTTP or ZeroMQ.\r\n\r\n* GOShare eases up communication over HTTP GET param based interaction.\r\n* ZeroMQ REQ/REP based quick synchronous communication model.\r\n\r\nit's \"go get\"-able\r\n\r\n``` go get \"github.com/abhishekkr/goshare\" ```\r\n\r\n***\r\n\r\n[![baby-gopher](https://raw2.github.com/drnic/babygopher-site/gh-pages/images/babygopher-badge.png)](http://www.babygopher.org)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}